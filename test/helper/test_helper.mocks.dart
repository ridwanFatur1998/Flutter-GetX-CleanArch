// Mocks generated by Mockito 5.3.2 from annotations
// in my_getx_app/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:my_getx_app/data/data_sources/remote/typicode_remote_data_source.dart'
    as _i6;
import 'package:my_getx_app/data/interceptors/general_interceptor.dart' as _i10;
import 'package:my_getx_app/data/models/response/typicode/get_all_posts_response.dart'
    as _i9;
import 'package:my_getx_app/data/models/response/typicode/get_post_by_id_response.dart'
    as _i8;
import 'package:my_getx_app/data/models/response/typicode/get_todo_by_id_response.dart'
    as _i7;
import 'package:my_getx_app/data/repositories/typicode_repository_impl.dart'
    as _i16;
import 'package:my_getx_app/domain/entities/post_entity.dart' as _i5;
import 'package:my_getx_app/domain/entities/todo_entity.dart' as _i4;
import 'package:my_getx_app/domain/repositories/typicode_repository.dart'
    as _i2;
import 'package:my_getx_app/domain/use_cases/typicode/get_all_posts.dart'
    as _i15;
import 'package:my_getx_app/domain/use_cases/typicode/get_post_by_id.dart'
    as _i14;
import 'package:my_getx_app/domain/use_cases/typicode/get_todo_by_id.dart'
    as _i11;
import 'package:my_getx_app/shared/error/failure.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTypicodeRepository_0 extends _i1.SmartFake
    implements _i2.TypicodeRepository {
  _FakeTypicodeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodoEntity_2 extends _i1.SmartFake implements _i4.TodoEntity {
  _FakeTodoEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostEntity_3 extends _i1.SmartFake implements _i5.PostEntity {
  _FakePostEntity_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTypicodeRemoteDataSource_4 extends _i1.SmartFake
    implements _i6.TypicodeRemoteDataSource {
  _FakeTypicodeRemoteDataSource_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTodoByIdResponse_5 extends _i1.SmartFake
    implements _i7.GetTodoByIdResponse {
  _FakeGetTodoByIdResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPostByIdResponse_6 extends _i1.SmartFake
    implements _i8.GetPostByIdResponse {
  _FakeGetPostByIdResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAllPostsResponse_7 extends _i1.SmartFake
    implements _i9.GetAllPostsResponse {
  _FakeGetAllPostsResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneralDio_8 extends _i1.SmartFake implements _i10.GeneralDio {
  _FakeGeneralDio_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetTodoById].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTodoById extends _i1.Mock implements _i11.GetTodoById {
  MockGetTodoById() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TypicodeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTypicodeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TypicodeRepository);
  @override
  _i12.Future<_i3.Either<_i13.Failure, _i4.TodoEntity>> call(
          _i11.GetTodoByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i12.Future<_i3.Either<_i13.Failure, _i4.TodoEntity>>.value(
                _FakeEither_1<_i13.Failure, _i4.TodoEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i12.Future<_i3.Either<_i13.Failure, _i4.TodoEntity>>);
}

/// A class which mocks [GetPostById].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPostById extends _i1.Mock implements _i14.GetPostById {
  MockGetPostById() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TypicodeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTypicodeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TypicodeRepository);
  @override
  _i12.Future<_i3.Either<_i13.Failure, _i5.PostEntity>> call(
          _i14.GetPostByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i12.Future<_i3.Either<_i13.Failure, _i5.PostEntity>>.value(
                _FakeEither_1<_i13.Failure, _i5.PostEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i12.Future<_i3.Either<_i13.Failure, _i5.PostEntity>>);
}

/// A class which mocks [GetAllPosts].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllPosts extends _i1.Mock implements _i15.GetAllPosts {
  MockGetAllPosts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TypicodeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTypicodeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TypicodeRepository);
  @override
  _i12.Future<_i3.Either<_i13.Failure, List<_i5.PostEntity>>> call(
          _i15.GetAllPostsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i12.Future<_i3.Either<_i13.Failure, List<_i5.PostEntity>>>.value(
                _FakeEither_1<_i13.Failure, List<_i5.PostEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i12.Future<_i3.Either<_i13.Failure, List<_i5.PostEntity>>>);
}

/// A class which mocks [TypicodeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTypicodeRepository extends _i1.Mock
    implements _i2.TypicodeRepository {
  MockTypicodeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i4.TodoEntity> getTodoById(_i11.GetTodoByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodoById,
          [params],
        ),
        returnValue: _i12.Future<_i4.TodoEntity>.value(_FakeTodoEntity_2(
          this,
          Invocation.method(
            #getTodoById,
            [params],
          ),
        )),
      ) as _i12.Future<_i4.TodoEntity>);
  @override
  _i12.Future<_i5.PostEntity> getPostById(_i14.GetPostByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostById,
          [params],
        ),
        returnValue: _i12.Future<_i5.PostEntity>.value(_FakePostEntity_3(
          this,
          Invocation.method(
            #getPostById,
            [params],
          ),
        )),
      ) as _i12.Future<_i5.PostEntity>);
  @override
  _i12.Future<List<_i5.PostEntity>> getAllPosts(
          _i15.GetAllPostsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [params],
        ),
        returnValue:
            _i12.Future<List<_i5.PostEntity>>.value(<_i5.PostEntity>[]),
      ) as _i12.Future<List<_i5.PostEntity>>);
}

/// A class which mocks [TypicodeRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTypicodeRepositoryImpl extends _i1.Mock
    implements _i16.TypicodeRepositoryImpl {
  MockTypicodeRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TypicodeRemoteDataSource get remoteDataSource => (super.noSuchMethod(
        Invocation.getter(#remoteDataSource),
        returnValue: _FakeTypicodeRemoteDataSource_4(
          this,
          Invocation.getter(#remoteDataSource),
        ),
      ) as _i6.TypicodeRemoteDataSource);
  @override
  _i12.Future<_i4.TodoEntity> getTodoById(_i11.GetTodoByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodoById,
          [params],
        ),
        returnValue: _i12.Future<_i4.TodoEntity>.value(_FakeTodoEntity_2(
          this,
          Invocation.method(
            #getTodoById,
            [params],
          ),
        )),
      ) as _i12.Future<_i4.TodoEntity>);
  @override
  _i12.Future<_i5.PostEntity> getPostById(_i14.GetPostByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostById,
          [params],
        ),
        returnValue: _i12.Future<_i5.PostEntity>.value(_FakePostEntity_3(
          this,
          Invocation.method(
            #getPostById,
            [params],
          ),
        )),
      ) as _i12.Future<_i5.PostEntity>);
  @override
  _i12.Future<List<_i5.PostEntity>> getAllPosts(
          _i15.GetAllPostsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [params],
        ),
        returnValue:
            _i12.Future<List<_i5.PostEntity>>.value(<_i5.PostEntity>[]),
      ) as _i12.Future<List<_i5.PostEntity>>);
}

/// A class which mocks [TypicodeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTypicodeRemoteDataSource extends _i1.Mock
    implements _i6.TypicodeRemoteDataSource {
  MockTypicodeRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i7.GetTodoByIdResponse> getTodoById(
          _i11.GetTodoByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodoById,
          [params],
        ),
        returnValue: _i12.Future<_i7.GetTodoByIdResponse>.value(
            _FakeGetTodoByIdResponse_5(
          this,
          Invocation.method(
            #getTodoById,
            [params],
          ),
        )),
      ) as _i12.Future<_i7.GetTodoByIdResponse>);
  @override
  _i12.Future<_i8.GetPostByIdResponse> getPostById(
          _i14.GetPostByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostById,
          [params],
        ),
        returnValue: _i12.Future<_i8.GetPostByIdResponse>.value(
            _FakeGetPostByIdResponse_6(
          this,
          Invocation.method(
            #getPostById,
            [params],
          ),
        )),
      ) as _i12.Future<_i8.GetPostByIdResponse>);
  @override
  _i12.Future<_i9.GetAllPostsResponse> getAllPosts(
          _i15.GetAllPostsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [params],
        ),
        returnValue: _i12.Future<_i9.GetAllPostsResponse>.value(
            _FakeGetAllPostsResponse_7(
          this,
          Invocation.method(
            #getAllPosts,
            [params],
          ),
        )),
      ) as _i12.Future<_i9.GetAllPostsResponse>);
}

/// A class which mocks [TypicodeRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTypicodeRemoteDataSourceImpl extends _i1.Mock
    implements _i6.TypicodeRemoteDataSourceImpl {
  MockTypicodeRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.GeneralDio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeGeneralDio_8(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i10.GeneralDio);
  @override
  _i12.Future<_i7.GetTodoByIdResponse> getTodoById(
          _i11.GetTodoByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodoById,
          [params],
        ),
        returnValue: _i12.Future<_i7.GetTodoByIdResponse>.value(
            _FakeGetTodoByIdResponse_5(
          this,
          Invocation.method(
            #getTodoById,
            [params],
          ),
        )),
      ) as _i12.Future<_i7.GetTodoByIdResponse>);
  @override
  _i12.Future<_i8.GetPostByIdResponse> getPostById(
          _i14.GetPostByIdParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostById,
          [params],
        ),
        returnValue: _i12.Future<_i8.GetPostByIdResponse>.value(
            _FakeGetPostByIdResponse_6(
          this,
          Invocation.method(
            #getPostById,
            [params],
          ),
        )),
      ) as _i12.Future<_i8.GetPostByIdResponse>);
  @override
  _i12.Future<_i9.GetAllPostsResponse> getAllPosts(
          _i15.GetAllPostsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [params],
        ),
        returnValue: _i12.Future<_i9.GetAllPostsResponse>.value(
            _FakeGetAllPostsResponse_7(
          this,
          Invocation.method(
            #getAllPosts,
            [params],
          ),
        )),
      ) as _i12.Future<_i9.GetAllPostsResponse>);
}
